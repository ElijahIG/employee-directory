{"version":3,"sources":["components/AppContext.jsx","components/EmployeeSearch.jsx","components/EmployeeTable.jsx","App.jsx","index.js"],"names":["AppContext","createContext","AppProvider","props","useState","employees","setEmployees","fetching","setFetching","searching","setSearching","sorting","setSorting","sortImg","setSortImg","fetchEmployeeData","a","fetch","response","json","data","results","useEffect","Provider","value","employeeData","search","sort","sortImgSrc","children","EmployeeSearch","useContext","Fragment","className","type","placeholder","onChange","e","target","EmployeeTable","employeeDatas","fetchings","onClick","filter","employee","name","first","last","toLowerCase","includes","b","map","index","key","src","picture","medium","alt","email","dob","age","location","state","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9b1c424.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = (props) => {\r\n  const [employees, setEmployees] = useState({});\r\n  const [fetching, setFetching] = useState(false);\r\n  const [searching, setSearching] = useState(\"\");\r\n  const [sorting, setSorting] = useState(\"alpha\");\r\n  const [sortImg, setSortImg] = useState(\"/img/arrow-up.svg\");\r\n\r\n  // Use the 'randomuser.me' API to generate list of randomised data for list\r\n  // as JSON and pass to the state\r\n  const fetchEmployeeData = async () => {\r\n    let response = await fetch(\"https://randomuser.me/api/?results=200&nat=au\");\r\n    let data = await response.json();\r\n    setEmployees(data.results);\r\n    setFetching(fetching === false ? true : false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployeeData();\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        employeeData: [employees, setEmployees],\r\n        fetch: [fetching, setFetching],\r\n        search: [searching, setSearching],\r\n        sort: [sorting, setSorting],\r\n        sortImgSrc: [sortImg, setSortImg],\r\n      }}\r\n    >\r\n      {\" \"}\r\n      {props.children}{\" \"}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"./AppContext\";\r\n\r\nconst EmployeeSearch = () => {\r\n  const { search } = useContext(AppContext);\r\n  let [searching, setSearching] = search;\r\n  const handleChange = (e) => {\r\n    setSearching((searching = e.target.value));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <h1>RocketSpace Employee/Contractor Roster</h1>\r\n      </header>\r\n\r\n      <section className=\"filterBar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Name...\"\r\n          value={searching}\r\n          onChange={handleChange}\r\n        />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmployeeSearch;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"./AppContext\";\r\n\r\nconst EmployeeTable = () => {\r\n  // Grab Search data to filter against\r\n  const { search } = useContext(AppContext);\r\n  const { employeeData } = useContext(AppContext);\r\n  const [employeeDatas /*setEmployeeDatas*/] = employeeData;\r\n  const { fetch } = useContext(AppContext);\r\n  const [fetchings /*setFetchings*/] = fetch;\r\n  const { sort } = useContext(AppContext);\r\n  const [sorting, setSorting] = sort;\r\n\r\n  const alphaCheck = (e) => {\r\n    setSorting(sorting === \"alpha\" ? \"notAlpha\" : \"alpha\");\r\n  };\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>Imagr</th>\r\n          <th className=\"alpha\" onClick={alphaCheck}>\r\n            Name{\" \"}\r\n          </th>\r\n          <th>E-Mail</th>\r\n          <th>Age</th>\r\n          <th>Location</th>\r\n        </tr>\r\n\r\n        {fetchings === false ? (\r\n          <tr className=\"employee\"></tr>\r\n        ) : (\r\n          <React.Fragment>\r\n            {/* Grabs all employee data */}\r\n            {employeeDatas\r\n              .filter((employee) => {\r\n                let name = employee.name.first + \" \" + employee.name.last;\r\n                return name.toLowerCase().includes(search[0].toLowerCase());\r\n              })\r\n              /* Sorts the data */\r\n              .sort((a, b) => {\r\n                if (sorting === \"alpha\") {\r\n                  return a.name.first + \" \" + a.name.last >\r\n                    b.name.first + \" \" + b.name.last\r\n                    ? 1\r\n                    : -1;\r\n                } else {\r\n                  return a.name.first + \" \" + a.name.last <\r\n                    b.name.first + \" \" + b.name.last\r\n                    ? 1\r\n                    : -1;\r\n                }\r\n              })\r\n              /* Loops the content  */\r\n              .map((employee, index) => (\r\n                <tr className=\"employee\" key={index}>\r\n                  <td className=\"employee-img\">\r\n                    <img src={employee.picture.medium} alt=\"\" />\r\n                  </td>\r\n                  <td className=\"employee-name\">\r\n                    {employee.name.first + \" \" + employee.name.last}\r\n                  </td>\r\n                  <td className=\"employee-email\">{employee.email}</td>\r\n                  <td className=\"employee-age\">{employee.dob.age}</td>\r\n                  <td className=\"employee-location\">\r\n                    {employee.location.state}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </React.Fragment>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default EmployeeTable;","// Main application\r\nimport React from \"react\";\r\nimport { AppProvider } from \"./components/AppContext\";\r\nimport EmployeeSearch from \"./components/EmployeeSearch\";\r\nimport EmployeeTable from \"./components/EmployeeTable\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppProvider>\r\n      <div className=\"App\">\r\n        <EmployeeSearch />\r\n        <EmployeeTable />\r\n      </div>{\" \"}\r\n    </AppProvider>\r\n  );\r\n}\r\n\r\nexport default App;","// Import libraries\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/index.scss';\r\nimport App from './App';\r\n\r\n// Render!\r\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}